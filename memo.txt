参考：https://chibashi.me/development/docker-compose-django-202004/

【自分の情報】
◆ホスト環境
　Windows 10 home 2004 64bit
　VSCode 1.48.2
　Docker version 19.03.13-beta2
　docker-compose version 1.26.2
◆コンテナ環境
　Python(ubuntu 18.04 LTS)
　　python==3.6
　　django==3.1
　　uwsgi==2.0.19.1
　　mysqlclient==2.0.1
　MySQL
　　MySQL 5.7
　Nginx
　　nginx 1.17

「Djangoプロジェクトを作成」までは参考通り

Remote-Container
django-admin.pyが存在しないので、
vscodeでRemote-containerを開いてから　django-admin startproject mysite　でプロジェクトを作成する
※Remote-containerを開く際、mysqlclientライブラリのインストールに必要なmysql_configを用意するために
　pythonディレクトリのDockerfileに下記コマンドの追加が必要だった
        RUN apt-get install -y mysql-server
        RUN apt-get install -y libmysqlclient-dev



【VSCodeでのリモート開発環境構築手順】
・ローカルPCでDocker Desktopを起動
・VSCodeでプロジェクトフォルダにコード一式クローン
・VSCodeにRemote-development拡張機能を追加
・VSCode左下の緑のボタンを押し、Remote-ContainerのOpen folderを選択し、出てきた画面がプロジェクトフォルダ直下であることを確認しOK
・VSCodeでリモートコンテナに入る

・VSCodeでリモートコンテナに入った後、/src直下にcdコマンドで移動しDjangoプロジェクトを立ち上げる
        django-admin startproject プロジェクト名
・docker-compose.ymlの「mysite」を上記で設定したプロジェクト名に変更
・プロジェクト内のsettings.pyを編集
        # データベースへの接続設定を変更
        DATABASES = {
        'default': {
                'ENGINE': 'django.db.backends.mysql',
                'NAME': 'django_db',
                'USER': 'django_user',
                'PASSWORD': 'djangopass',
                'PORT': '3306',
                'HOST': 'db',
                }
        }

        # Static files (CSS, JavaScript, Images)
        STATIC_URL = '/static/'
        STATIC_ROOT = '/static/'　# ←追加します
・プロジェクト内のsettings.pyを編集2(ローカルPCのIPアドレス(下記の192.168.64.8は自分の値に設定する)を設定して管理者はトップページも見れるようにする)
        ALLOWED_HOSTS = ["localhost","192.168.64.8",]
・Djangoのデータベース構築と管理者ユーザー作成(プロジェクトフォルダ内のmanage.pyがある階層に移動する)
        # DBマイグレーション
        python3 manage.py migrate
        # 管理者の設定(nameはroot、EmailはブランクのままEnter、passはrootに設定（仮）)
        python3 manage.py createsuperuser
・静的ファイルをコピー
        cssやjavascriptなどの静的ファイルがあればリモートコンテナを出た後でstaticディレクトリにコピー
・VSCodeの左下の緑のボタンから Remote-ContainerのRebuildを実行しコンテナに設定を反映させる
・再度VSCodeのremote-containerでリモート開発環境に入る
（・Docker DesktopでdjangoコンテナがRUNNINGになり、内部でdjango_db_1,django_nginx_1,django_python_1がRUNNINGになっていればOK）
・/src/プロジェクト名　直下へ移動し、サーバーを起動してアクセスしてみる
        python3 manage.py runserver
　・上記サーバーへローカルPCのchromeブラウザからアクセスできなかった場合、VSCodeのターミナルにALLOWED_HOSTSに追加すべきIPアドレスが提示されるので、
　　mysite/mysite/settings.pyを開き、ALLOWED_HOSTSにIPアドレスを追加し、コンテナをリビルドする（IPアドレスは""で囲う必要があることに注意）
　　・もしリビルドが上手くいかない場合はdocker desktopからimagesとcontainersを全部消去し、VSCodeで開いている.devcontainerを削除した後にVSCodeでRemote Containerで再度コンテナをビルドする
・runserverで建てたサーバーにアクセスして、Djangoのロケットのページが見えたら開発環境作成終了！
　・サーバーのアドレスの後に /admin をつけると管理画面にアクセスできるので先ほど設定した管理者ユーザー（name=root,pass=root）でログインできる
　　（name=root,pass=rootでログインするとchrome上で警告が出る。これは過去にroot,rootの組み合わせから情報が漏洩したことがあるという警告。）


注意
・「mysite」はDjangoのプロジェクト名なので、別名にする場合はdocker_compose.ymlの「mysite」部分も変更する
・管理者ユーザーの設定では名前・パスワード共に「root」にしているが、基本的に変更すること

------------------------------
